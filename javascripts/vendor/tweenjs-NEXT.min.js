/*
* TweenJS
* Visit http://createjs.com/ for documentation, updates and examples.
*
* Copyright (c) 2011 gskinner.com, inc.
* 
* Distributed under the terms of the MIT license.
* http://www.opensource.org/licenses/mit-license.html
*
* This notice shall be included in all copies or substantial portions of the Software.
*/
this.createjs = this.createjs || {};
(function() {
  var EventDispatcher = function() {
    this.initialize()
  };
  var p = EventDispatcher.prototype;
  EventDispatcher.initialize = function(target) {
    target.addEventListener = p.addEventListener;
    target.removeEventListener = p.removeEventListener;
    target.removeAllEventListeners = p.removeAllEventListeners;
    target.hasEventListener = p.hasEventListener;
    target.dispatchEvent = p.dispatchEvent
  };
  p._listeners = null;
  p.initialize = function() {
  };
  p.addEventListener = function(type, listener) {
    var listeners = this._listeners;
    if(!listeners) {
      listeners = this._listeners = {}
    }else {
      this.removeEventListener(type, listener)
    }
    var arr = listeners[type];
    if(!arr) {
      arr = listeners[type] = []
    }
    arr.push(listener);
    return listener
  };
  p.removeEventListener = function(type, listener) {
    var listeners = this._listeners;
    if(!listeners) {
      return
    }
    var arr = listeners[type];
    if(!arr) {
      return
    }
    for(var i = 0, l = arr.length;i < l;i++) {
      if(arr[i] == listener) {
        if(l == 1) {
          delete listeners[type]
        }else {
          arr.splice(i, 1)
        }
        break
      }
    }
  };
  p.removeAllEventListeners = function(type) {
    if(!type) {
      this._listeners = null
    }else {
      if(this._listeners) {
        delete this._listeners[type]
      }
    }
  };
  p.dispatchEvent = function(eventObj, target) {
    var ret = false, listeners = this._listeners;
    if(eventObj && listeners) {
      if(typeof eventObj == "string") {
        eventObj = {type:eventObj}
      }
      eventObj.target = target || this;
      var arr = listeners[eventObj.type];
      if(!arr) {
        return ret
      }
      arr = arr.slice();
      for(var i = 0, l = arr.length;i < l;i++) {
        var o = arr[i];
        if(o instanceof Function) {
          ret = ret || o.apply(null, [eventObj])
        }else {
          if(o.handleEvent) {
            ret = ret || o.handleEvent(eventObj)
          }
        }
      }
    }
    return!!ret
  };
  p.hasEventListener = function(type) {
    var listeners = this._listeners;
    return!!(listeners && listeners[type])
  };
  p.toString = function() {
    return"[EventDispatcher]"
  };
  createjs.EventDispatcher = EventDispatcher
})();
this.createjs = this.createjs || {};
(function() {
  var Tween = function(target, props, pluginData) {
    this.initialize(target, props, pluginData)
  };
  var p = Tween.prototype;
  Tween.NONE = 0;
  Tween.LOOP = 1;
  Tween.REVERSE = 2;
  Tween.IGNORE = {};
  Tween._tweens = [];
  Tween._plugins = {};
  Tween.get = function(target, props, pluginData, override) {
    if(override) {
      Tween.removeTweens(target)
    }
    return new Tween(target, props, pluginData)
  };
  Tween.tick = function(delta, paused) {
    var tweens = Tween._tweens.slice();
    for(var i = tweens.length - 1;i >= 0;i--) {
      var tween = tweens[i];
      if(paused && !tween.ignoreGlobalPause || tween._paused) {
        continue
      }
      tween.tick(tween._useTicks ? 1 : delta)
    }
  };
  if(createjs.Ticker) {
    createjs.Ticker.addListener(Tween, false)
  }
  Tween.removeTweens = function(target) {
    if(!target.tweenjs_count) {
      return
    }
    var tweens = Tween._tweens;
    for(var i = tweens.length - 1;i >= 0;i--) {
      if(tweens[i]._target == target) {
        tweens[i]._paused = true;
        tweens.splice(i, 1)
      }
    }
    target.tweenjs_count = 0
  };
  Tween.hasActiveTweens = function(target) {
    if(target) {
      return target.tweenjs_count
    }
    return Tween._tweens && Tween._tweens.length
  };
  Tween.installPlugin = function(plugin, properties) {
    var priority = plugin.priority;
    if(priority == null) {
      plugin.priority = priority = 0
    }
    for(var i = 0, l = properties.length, p = Tween._plugins;i < l;i++) {
      var n = properties[i];
      if(!p[n]) {
        p[n] = [plugin]
      }else {
        var arr = p[n];
        for(var j = 0, jl = arr.length;j < jl;j++) {
          if(priority < arr[j].priority) {
            break
          }
        }
        p[n].splice(j, 0, plugin)
      }
    }
  };
  Tween._register = function(tween, value) {
    var target = tween._target;
    if(value) {
      if(target) {
        target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count + 1 : 1
      }
      Tween._tweens.push(tween)
    }else {
      if(target) {
        target.tweenjs_count--
      }
      var i = Tween._tweens.indexOf(tween);
      if(i != -1) {
        Tween._tweens.splice(i, 1)
      }
    }
  };
  p.addEventListener = null;
  p.removeEventListener = null;
  p.removeAllEventListeners = null;
  p.dispatchEvent = null;
  p.hasEventListener = null;
  p._listeners = null;
  createjs.EventDispatcher.initialize(p);
  p.ignoreGlobalPause = false;
  p.loop = false;
  p.duration = 0;
  p.pluginData = null;
  p.onChange = null;
  p.change = null;
  p.target = null;
  p.position = null;
  p._paused = false;
  p._curQueueProps = null;
  p._initQueueProps = null;
  p._steps = null;
  p._actions = null;
  p._prevPosition = 0;
  p._stepPosition = 0;
  p._prevPos = -1;
  p._target = null;
  p._useTicks = false;
  p.initialize = function(target, props, pluginData) {
    this.target = this._target = target;
    if(props) {
      this._useTicks = props.useTicks;
      this.ignoreGlobalPause = props.ignoreGlobalPause;
      this.loop = props.loop;
      this.onChange = props.onChange;
      if(props.override) {
        Tween.removeTweens(target)
      }
    }
    this.pluginData = pluginData || {};
    this._curQueueProps = {};
    this._initQueueProps = {};
    this._steps = [];
    this._actions = [];
    if(props && props.paused) {
      this._paused = true
    }else {
      Tween._register(this, true)
    }
    if(props && props.position != null) {
      this.setPosition(props.position, Tween.NONE)
    }
  };
  p.wait = function(duration) {
    if(duration == null || duration <= 0) {
      return this
    }
    var o = this._cloneProps(this._curQueueProps);
    return this._addStep({d:duration, p0:o, e:this._linearEase, p1:o})
  };
  p.to = function(props, duration, ease) {
    if(isNaN(duration) || duration < 0) {
      duration = 0
    }
    return this._addStep({d:duration || 0, p0:this._cloneProps(this._curQueueProps), e:ease, p1:this._cloneProps(this._appendQueueProps(props))})
  };
  p.call = function(callback, params, scope) {
    return this._addAction({f:callback, p:params ? params : [this], o:scope ? scope : this._target})
  };
  p.set = function(props, target) {
    return this._addAction({f:this._set, o:this, p:[props, target ? target : this._target]})
  };
  p.play = function(tween) {
    return this.call(tween.setPaused, [false], tween)
  };
  p.pause = function(tween) {
    if(!tween) {
      tween = this
    }
    return this.call(tween.setPaused, [true], tween)
  };
  p.setPosition = function(value, actionsMode) {
    if(value < 0) {
      value = 0
    }
    if(actionsMode == null) {
      actionsMode = 1
    }
    var t = value;
    var end = false;
    if(t >= this.duration) {
      if(this.loop) {
        t = t % this.duration
      }else {
        t = this.duration;
        end = true
      }
    }
    if(t == this._prevPos) {
      return end
    }
    var prevPos = this._prevPos;
    this.position = this._prevPos = t;
    this._prevPosition = value;
    if(this._target) {
      if(end) {
        this._updateTargetProps(null, 1)
      }else {
        if(this._steps.length > 0) {
          for(var i = 0, l = this._steps.length;i < l;i++) {
            if(this._steps[i].t > t) {
              break
            }
          }
          var step = this._steps[i - 1];
          this._updateTargetProps(step, (this._stepPosition = t - step.t) / step.d)
        }
      }
    }
    if(actionsMode != 0 && this._actions.length > 0) {
      if(this._useTicks) {
        this._runActions(t, t)
      }else {
        if(actionsMode == 1 && t < prevPos) {
          if(prevPos != this.duration) {
            this._runActions(prevPos, this.duration)
          }
          this._runActions(0, t, true)
        }else {
          this._runActions(prevPos, t)
        }
      }
    }
    if(end) {
      this.setPaused(true)
    }
    this.onChange && this.onChange(this);
    this.dispatchEvent("change");
    return end
  };
  p.tick = function(delta) {
    if(this._paused) {
      return
    }
    this.setPosition(this._prevPosition + delta)
  };
  p.setPaused = function(value) {
    this._paused = !!value;
    Tween._register(this, !value);
    return this
  };
  p.w = p.wait;
  p.t = p.to;
  p.c = p.call;
  p.s = p.set;
  p.toString = function() {
    return"[Tween]"
  };
  p.clone = function() {
    throw"Tween can not be cloned.";
  };
  p._updateTargetProps = function(step, ratio) {
    var p0, p1, v, v0, v1, arr;
    if(!step && ratio == 1) {
      p0 = p1 = this._curQueueProps
    }else {
      if(step.e) {
        ratio = step.e(ratio, 0, 1, 1)
      }
      p0 = step.p0;
      p1 = step.p1
    }
    for(n in this._initQueueProps) {
      if((v0 = p0[n]) == null) {
        p0[n] = v0 = this._initQueueProps[n]
      }
      if((v1 = p1[n]) == null) {
        p1[n] = v1 = v0
      }
      if(v0 == v1 || ratio == 0 || ratio == 1 || typeof v0 != "number") {
        v = ratio == 1 ? v1 : v0
      }else {
        v = v0 + (v1 - v0) * ratio
      }
      var ignore = false;
      if(arr = Tween._plugins[n]) {
        for(var i = 0, l = arr.length;i < l;i++) {
          var v2 = arr[i].tween(this, n, v, p0, p1, ratio, !!step && p0 == p1, !step);
          if(v2 == Tween.IGNORE) {
            ignore = true
          }else {
            v = v2
          }
        }
      }
      if(!ignore) {
        this._target[n] = v
      }
    }
  };
  p._runActions = function(startPos, endPos, includeStart) {
    var sPos = startPos;
    var ePos = endPos;
    var i = -1;
    var j = this._actions.length;
    var k = 1;
    if(startPos > endPos) {
      sPos = endPos;
      ePos = startPos;
      i = j;
      j = k = -1
    }
    while((i += k) != j) {
      var action = this._actions[i];
      var pos = action.t;
      if(pos == ePos || pos > sPos && pos < ePos || includeStart && pos == startPos) {
        action.f.apply(action.o, action.p)
      }
    }
  };
  p._appendQueueProps = function(o) {
    var arr, oldValue, i, l, injectProps;
    for(var n in o) {
      if(this._initQueueProps[n] === undefined) {
        oldValue = this._target[n];
        if(arr = Tween._plugins[n]) {
          for(i = 0, l = arr.length;i < l;i++) {
            oldValue = arr[i].init(this, n, oldValue)
          }
        }
        this._initQueueProps[n] = oldValue === undefined ? null : oldValue
      }else {
        oldValue = this._curQueueProps[n]
      }
      if(arr = Tween._plugins[n]) {
        injectProps = injectProps || {};
        for(i = 0, l = arr.length;i < l;i++) {
          if(arr[i].step) {
            arr[i].step(this, n, oldValue, o[n], injectProps)
          }
        }
      }
      this._curQueueProps[n] = o[n]
    }
    if(injectProps) {
      this._appendQueueProps(injectProps)
    }
    return this._curQueueProps
  };
  p._cloneProps = function(props) {
    var o = {};
    for(var n in props) {
      o[n] = props[n]
    }
    return o
  };
  p._addStep = function(o) {
    if(o.d > 0) {
      this._steps.push(o);
      o.t = this.duration;
      this.duration += o.d
    }
    return this
  };
  p._addAction = function(o) {
    o.t = this.duration;
    this._actions.push(o);
    return this
  };
  p._set = function(props, o) {
    for(var n in props) {
      o[n] = props[n]
    }
  };
  createjs.Tween = Tween
})();
this.createjs = this.createjs || {};
(function() {
  var Timeline = function(tweens, labels, props) {
    this.initialize(tweens, labels, props)
  };
  var p = Timeline.prototype;
  p.ignoreGlobalPause = false;
  p.duration = 0;
  p.loop = false;
  p.onChange = null;
  p.position = null;
  p._paused = false;
  p._tweens = null;
  p._labels = null;
  p._prevPosition = 0;
  p._prevPos = -1;
  p._useTicks = false;
  p.initialize = function(tweens, labels, props) {
    this._tweens = [];
    if(props) {
      this._useTicks = props.useTicks;
      this.loop = props.loop;
      this.ignoreGlobalPause = props.ignoreGlobalPause;
      this.onChange = props.onChange
    }
    if(tweens) {
      this.addTween.apply(this, tweens)
    }
    this.setLabels(labels);
    if(props && props.paused) {
      this._paused = true
    }else {
      createjs.Tween._register(this, true)
    }
    if(props && props.position != null) {
      this.setPosition(props.position, createjs.Tween.NONE)
    }
  };
  p.addTween = function(tween) {
    var l = arguments.length;
    if(l > 1) {
      for(var i = 0;i < l;i++) {
        this.addTween(arguments[i])
      }
      return arguments[0]
    }else {
      if(l == 0) {
        return null
      }
    }
    this.removeTween(tween);
    this._tweens.push(tween);
    tween.setPaused(true);
    tween._paused = false;
    tween._useTicks = this._useTicks;
    if(tween.duration > this.duration) {
      this.duration = tween.duration
    }
    if(this._prevPos >= 0) {
      tween.setPosition(this._prevPos, createjs.Tween.NONE)
    }
    return tween
  };
  p.removeTween = function(tween) {
    var l = arguments.length;
    if(l > 1) {
      var good = true;
      for(var i = 0;i < l;i++) {
        good = good && this.removeTween(arguments[i])
      }
      return good
    }else {
      if(l == 0) {
        return false
      }
    }
    var index = this._tweens.indexOf(tween);
    if(index != -1) {
      this._tweens.splice(index, 1);
      if(tween.duration >= this.duration) {
        this.updateDuration()
      }
      return true
    }else {
      return false
    }
  };
  p.addLabel = function(label, position) {
    this._labels[label] = position
  };
  p.setLabels = function(o) {
    this._labels = o ? o : {}
  };
  p.gotoAndPlay = function(positionOrLabel) {
    this.setPaused(false);
    this._goto(positionOrLabel)
  };
  p.gotoAndStop = function(positionOrLabel) {
    this.setPaused(true);
    this._goto(positionOrLabel)
  };
  p.setPosition = function(value, actionsMode) {
    if(value < 0) {
      value = 0
    }
    var t = this.loop ? value % this.duration : value;
    var end = !this.loop && value >= this.duration;
    if(t == this._prevPos) {
      return end
    }
    this._prevPosition = value;
    this.position = this._prevPos = t;
    for(var i = 0, l = this._tweens.length;i < l;i++) {
      this._tweens[i].setPosition(t, actionsMode);
      if(t != this._prevPos) {
        return false
      }
    }
    if(end) {
      this.setPaused(true)
    }
    this.onChange && this.onChange(this);
    return end
  };
  p.setPaused = function(value) {
    this._paused = !!value;
    createjs.Tween._register(this, !value)
  };
  p.updateDuration = function() {
    this.duration = 0;
    for(var i = 0, l = this._tweens.length;i < l;i++) {
      tween = this._tweens[i];
      if(tween.duration > this.duration) {
        this.duration = tween.duration
      }
    }
  };
  p.tick = function(delta) {
    this.setPosition(this._prevPosition + delta)
  };
  p.resolve = function(positionOrLabel) {
    var pos = parseFloat(positionOrLabel);
    if(isNaN(pos)) {
      pos = this._labels[positionOrLabel]
    }
    return pos
  };
  p.toString = function() {
    return"[Timeline]"
  };
  p.clone = function() {
    throw"Timeline can not be cloned.";
  };
  p._goto = function(positionOrLabel) {
    var pos = this.resolve(positionOrLabel);
    if(pos != null) {
      this.setPosition(pos)
    }
  };
  createjs.Timeline = Timeline
})();
this.createjs = this.createjs || {};
(function() {
  var Ease = function() {
    throw"Ease cannot be instantiated.";
  };
  Ease.linear = function(t) {
    return t
  };
  Ease.none = Ease.linear;
  Ease.get = function(amount) {
    if(amount < -1) {
      amount = -1
    }
    if(amount > 1) {
      amount = 1
    }
    return function(t) {
      if(amount == 0) {
        return t
      }
      if(amount < 0) {
        return t * (t * -amount + 1 + amount)
      }
      return t * ((2 - t) * amount + (1 - amount))
    }
  };
  Ease.getPowIn = function(pow) {
    return function(t) {
      return Math.pow(t, pow)
    }
  };
  Ease.getPowOut = function(pow) {
    return function(t) {
      return 1 - Math.pow(1 - t, pow)
    }
  };
  Ease.getPowInOut = function(pow) {
    return function(t) {
      if((t *= 2) < 1) {
        return 0.5 * Math.pow(t, pow)
      }
      return 1 - 0.5 * Math.abs(Math.pow(2 - t, pow))
    }
  };
  Ease.quadIn = Ease.getPowIn(2);
  Ease.quadOut = Ease.getPowOut(2);
  Ease.quadInOut = Ease.getPowInOut(2);
  Ease.cubicIn = Ease.getPowIn(3);
  Ease.cubicOut = Ease.getPowOut(3);
  Ease.cubicInOut = Ease.getPowInOut(3);
  Ease.quartIn = Ease.getPowIn(4);
  Ease.quartOut = Ease.getPowOut(4);
  Ease.quartInOut = Ease.getPowInOut(4);
  Ease.quintIn = Ease.getPowIn(5);
  Ease.quintOut = Ease.getPowOut(5);
  Ease.quintInOut = Ease.getPowInOut(5);
  Ease.sineIn = function(t) {
    return 1 - Math.cos(t * Math.PI / 2)
  };
  Ease.sineOut = function(t) {
    return Math.sin(t * Math.PI / 2)
  };
  Ease.sineInOut = function(t) {
    return-0.5 * (Math.cos(Math.PI * t) - 1)
  };
  Ease.getBackIn = function(amount) {
    return function(t) {
      return t * t * ((amount + 1) * t - amount)
    }
  };
  Ease.backIn = Ease.getBackIn(1.7);
  Ease.getBackOut = function(amount) {
    return function(t) {
      return--t * t * ((amount + 1) * t + amount) + 1
    }
  };
  Ease.backOut = Ease.getBackOut(1.7);
  Ease.getBackInOut = function(amount) {
    amount *= 1.525;
    return function(t) {
      if((t *= 2) < 1) {
        return 0.5 * t * t * ((amount + 1) * t - amount)
      }
      return 0.5 * ((t -= 2) * t * ((amount + 1) * t + amount) + 2)
    }
  };
  Ease.backInOut = Ease.getBackInOut(1.7);
  Ease.circIn = function(t) {
    return-(Math.sqrt(1 - t * t) - 1)
  };
  Ease.circOut = function(t) {
    return Math.sqrt(1 - --t * t)
  };
  Ease.circInOut = function(t) {
    if((t *= 2) < 1) {
      return-0.5 * (Math.sqrt(1 - t * t) - 1)
    }
    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
  };
  Ease.bounceIn = function(t) {
    return 1 - Ease.bounceOut(1 - t)
  };
  Ease.bounceOut = function(t) {
    if(t < 1 / 2.75) {
      return 7.5625 * t * t
    }else {
      if(t < 2 / 2.75) {
        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
      }else {
        if(t < 2.5 / 2.75) {
          return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
        }else {
          return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375
        }
      }
    }
  };
  Ease.bounceInOut = function(t) {
    if(t < 0.5) {
      return Ease.bounceIn(t * 2) * 0.5
    }
    return Ease.bounceOut(t * 2 - 1) * 0.5 + 0.5
  };
  Ease.getElasticIn = function(amplitude, period) {
    var pi2 = Math.PI * 2;
    return function(t) {
      if(t == 0 || t == 1) {
        return t
      }
      var s = period / pi2 * Math.asin(1 / amplitude);
      return-(amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period))
    }
  };
  Ease.elasticIn = Ease.getElasticIn(1, 0.3);
  Ease.getElasticOut = function(amplitude, period) {
    var pi2 = Math.PI * 2;
    return function(t) {
      if(t == 0 || t == 1) {
        return t
      }
      var s = period / pi2 * Math.asin(1 / amplitude);
      return amplitude * Math.pow(2, -10 * t) * Math.sin((t - s) * pi2 / period) + 1
    }
  };
  Ease.elasticOut = Ease.getElasticOut(1, 0.3);
  Ease.getElasticInOut = function(amplitude, period) {
    var pi2 = Math.PI * 2;
    return function(t) {
      var s = period / pi2 * Math.asin(1 / amplitude);
      if((t *= 2) < 1) {
        return-0.5 * amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period)
      }
      return amplitude * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * pi2 / period) * 0.5 + 1
    }
  };
  Ease.elasticInOut = Ease.getElasticInOut(1, 0.3 * 1.5);
  createjs.Ease = Ease
})();
this.createjs = this.createjs || {};
(function() {
  var MotionGuidePlugin = function() {
    throw"MotionGuidePlugin cannot be instantiated.";
  };
  MotionGuidePlugin.priority = 0;
  MotionGuidePlugin.install = function() {
    createjs.Tween.installPlugin(MotionGuidePlugin, ["guide", "x", "y", "rotation"]);
    return createjs.Tween.IGNORE
  };
  MotionGuidePlugin.init = function(tween, prop, value) {
    var target = tween.target;
    if(!target.hasOwnProperty("x")) {
      target.x = 0
    }
    if(!target.hasOwnProperty("y")) {
      target.y = 0
    }
    if(!target.hasOwnProperty("rotation")) {
      target.rotation = 0
    }
    return prop == "guide" ? null : value
  };
  MotionGuidePlugin.step = function(tween, prop, startValue, endValue, injectProps) {
    if(prop != "guide") {
      return endValue
    }
    var temp, data = endValue;
    if(!data.hasOwnProperty("path")) {
      data.path = []
    }
    var path = data.path;
    if(!data.hasOwnProperty("end")) {
      data.end = 1
    }
    if(!data.hasOwnProperty("start")) {
      data.start = startValue && startValue.hasOwnProperty("end") && startValue.path === path ? startValue.end : 0
    }
    if(data.hasOwnProperty("_segments") && data._length) {
      return endValue
    }
    var l = path.length;
    var accuracy = 10;
    if(l >= 6 && (l - 2) % 4 == 0) {
      data._segments = [];
      data._length = 0;
      for(var i = 2;i < l;i += 4) {
        var sx = path[i - 2], sy = path[i - 1];
        var cx = path[i + 0], cy = path[i + 1];
        var ex = path[i + 2], ey = path[i + 3];
        var oldX = sx, oldY = sy;
        var tempX, tempY, total = 0;
        var sublines = [];
        for(var j = 1;j <= accuracy;j++) {
          var t = j / accuracy;
          var inv = 1 - t;
          tempX = inv * inv * sx + 2 * inv * t * cx + t * t * ex;
          tempY = inv * inv * sy + 2 * inv * t * cy + t * t * ey;
          total += sublines[sublines.push(Math.sqrt((temp = tempX - oldX) * temp + (temp = tempY - oldY) * temp)) - 1];
          oldX = tempX;
          oldY = tempY
        }
        data._segments.push(total);
        data._segments.push(sublines);
        data._length += total
      }
    }else {
      throw"invalid 'path' data, please see documentation for valid paths";
    }
    temp = data.orient;
    data.orient = false;
    MotionGuidePlugin.calc(data, data.end, injectProps);
    data.orient = temp;
    return endValue
  };
  MotionGuidePlugin.tween = function(tween, prop, value, startValues, endValues, ratio, wait, end) {
    var data = endValues.guide;
    if(data == undefined || data === startValues.guide) {
      return value
    }
    if(data.lastRatio != ratio) {
      var t = (data.end - data.start) * (wait ? data.end : ratio) + data.start;
      MotionGuidePlugin.calc(data, t, tween.target);
      if(data.orient) {
        tween.target.rotation += startValues.rotation || 0
      }
      data.lastRatio = ratio
    }
    if(!data.orient && prop == "rotation") {
      return value
    }
    return tween.target[prop]
  };
  MotionGuidePlugin.calc = function(data, ratio, target) {
    if(data._segments == undefined) {
      MotionGuidePlugin.validate(data)
    }
    if(target == undefined) {
      target = {x:0, y:0, rotation:0}
    }
    var seg = data._segments;
    var path = data.path;
    var pos = data._length * ratio;
    var cap = seg.length - 2;
    var n = 0;
    while(pos > seg[n] && n < cap) {
      pos -= seg[n];
      n += 2
    }
    var sublines = seg[n + 1];
    var i = 0;
    cap = sublines.length - 1;
    while(pos > sublines[i] && i < cap) {
      pos -= sublines[i];
      i++
    }
    var t = i / ++cap + pos / (cap * sublines[i]);
    n = n * 2 + 2;
    var inv = 1 - t;
    target.x = inv * inv * path[n - 2] + 2 * inv * t * path[n + 0] + t * t * path[n + 2];
    target.y = inv * inv * path[n - 1] + 2 * inv * t * path[n + 1] + t * t * path[n + 3];
    if(data.orient) {
      target.rotation = 57.2957795 * Math.atan2((path[n + 1] - path[n - 1]) * inv + (path[n + 3] - path[n + 1]) * t, (path[n + 0] - path[n - 2]) * inv + (path[n + 2] - path[n + 0]) * t)
    }
    return target
  };
  createjs.MotionGuidePlugin = MotionGuidePlugin
})();
(function() {
  var o = this.createjs = this.createjs || {};
  o = o.TweenJS = o.TweenJS || {};
  o.version = "0.4.0";
  o.buildDate = "Tue, 12 Feb 2013 21:09:02 GMT"
})();

